[GotoActions__CallForwardingNoReply]
7=0
12=0
31=0
26=0
1=0
9=0
14=0
32=0
27=0
2=0
20=0
15=0
33=0
28=0
3=0
21=0
16=0
34=0
29=0
4=0
22=0
17=0
35=0
5=0
10=0
23=0
18=0
36=0
6=0
11=0
24=0
19=0
37=0
30=0
25=0
8=0
13=0

[AbbreviatedAddress]
7=>A:@:WaitForDialTone
12=>PathConfirmationForOnce
4=>A:@:SendStringDTMF [#]
8=>A:@:SendStringDTMF [**0]
13=>A:@:JustHookOn
17=>A:@:WaitForServiceConfirmationVoice
1=>A:@:WaitForDialTone
5=>A:@:WaitForServiceConfirmationVoice
9=>A:@:WaitForRingBackTone
10=>B:@:WaitForRing
14=>B:@:JustHookOn
18=>A:@:JustHookOn
2=>A:@:RegisterAA
6=>A:@:JustHookOn
11=>B:@:JustHookOff
15=>A:@:WaitForDialTone
19=End of script
3=>DialDTMF
16=>A:@:CancelAA

[GotoActions__A calls B (no dial tone) for Call Length]
3=0
7=0
12=0
4=0
8=0
13=0
1=0
5=0
9=0
10=0
14=0
2=0
6=0
11=0

[GotoActions__NoDialWaitForHowlerTone]
3=0
7=0
2=0
4=0
6=0
8=0
1=0
5=0
9=0
10=0

[A calls B (VoIP) and confirms once]
1=A calls B, VoIP, confirms once
2=End of script

[CallTransfer]
1=>ACallsBWithDTMFAndConfirmsOnce
3=>B:C:ACallsBWithDTMF
5=>A:C:PathConfirmationForOnce
7=>C:@:WaitForBusyTone
2=>B:@:JustHookFlash
4=>B:@:JustHookOn
6=>A:@:JustHookOn
8=End of script

[FaxCallee]
1=>A:@:SendFax
2=>A:@:SendVoice
3=End of script

[HookOffNoDial]
1=>A:@:WaitForDialTone
3=>ACallsBWithDTMFAndConfirmsOnce
5=>B:@:WaitForBusyTone
2=>A:@:JustHookOn
4=>A:@:JustHookOn
6=End of script

[Actions]
File=Abacus.ACT

[GotoActions__A calls B (ISDN) and confirms for random CL]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0

[GotoActions__FaxCallee]
1=0
2=0
3=0

[GotoActions__A calls B (DTMF) and confirms for Call Length]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0

[GotoActions__NormalBasicCall]
1=0
2=0
3=0
4=0

[GotoActions__DialWrongNumber]
3=0
7=0
2=0
4=0
6=0
8=0
1=0
5=0
9=0
10=0

[GotoActions__LargeFaxCallee]
1=0
2=0

[GotoActions__ThreePartyService]
7=0
12=0
30=0
25=0
8=0
13=0
31=0
26=0
1=0
9=0
14=0
32=0
27=0
2=0
20=0
15=0
28=0
3=0
21=0
16=0
29=0
4=0
22=0
17=0
5=0
10=0
23=0
18=0
6=0
11=0
24=0
19=0

[GotoActions__HookOffOnContinuously]
1=0

[CalleeBusy]
3=>A:@:WaitForBusyVoice
7=>A:@:JustHookOn
2=>ACallsBWithDTMF
4=>A:@:JustHookOn
6=>ACallsBWithDTMFAndConfirmsOnce
8=>B:@:WaitForBusyTone
1=>B:@:WaitSeconds [1]
5=>B:@:JustHookOn
9=End of script

[A calls B (ISUP) and confirms for Call Length]
1=A calls B, ISUP, confirms for Call Length
2=End of script

[CalleeNoResponse]
3=>A:@:WaitForRingBackTone
7=>A:@:WaitForHowlerTone
12=End of script
2=>B:@:OnHookWaitSeconds
4=>A:@:WaitRingTimer
6=>A:@:WaitBusyToneTimer
8=>A:@:JustHookOn
11=>B:@:WaitForBusyTone
1=>ACallsBWithDTMF
5=>A:@:WaitForBusyTone
9=>ACallsBWithDTMFAndConfirmsOnce
10=>A:@:JustHookOn

[AFT: Call Waiting]
1=A calls B, DTMF, confirms once
2=C:A:AFT A calls B, DTMF
3=A:@:AFT Wait for Call Waiting Tone
4=A:@:AFT Do Hook Flash wait time
5=A:C:AFT Do Path Confirmation Once
6=A:@:AFT Do Hook Flash wait time
7=AFT Do Path Confirmation Once
8=End of script

[AFT: 3-way Calling]
1=A calls B, DTMF, confirms once
2=A:@:AFT A does hookflash and waits for Stutter dial tone
3=A:C:A calls B, DTMF, confirms once
4=A:@:AFT Do Hook Flash wait time
5=AFT Do Path Confirmation Once
6=A:@:Wait for time in seconds [2]
7=A:C:AFT Do Path Confirmation Once
8=B:@:Wait for time in seconds [2]
9=B:C:AFT Do Path Confirmation Once
10=End of script

[AFT: 4-way Conference]
1=A calls B, DTMF, confirms once
2=A:@:AFT A does hookflash and waits for Stutter dial tone
3=A:C:A calls B, DTMF, confirms once
4=A:@:AFT Do Hook Flash wait time
5=AFT Do Path Confirmation Once
6=A:@:Wait for time in seconds [2]
7=A:C:AFT Do Path Confirmation Once
8=B:@:Wait for time in seconds [2]
9=B:C:AFT Do Path Confirmation Once
10=A:@:AFT A does hookflash and waits for Stutter dial tone
11=A:D:A calls B, DTMF, confirms once
12=A:@:AFT Do Hook Flash wait time
13=AFT Do Path Confirmation Once
14=A:@:Wait for time in seconds [2]
15=A:C:AFT Do Path Confirmation Once
16=A:@:Wait for time in seconds [2]
17=A:D:AFT Do Path Confirmation Once
18=B:@:Wait for time in seconds [2]
19=B:C:AFT Do Path Confirmation Once
20=B:@:Wait for time in seconds [2]
21=B:D:AFT Do Path Confirmation Once
22=C:@:Wait for time in seconds [2]
23=C:D:AFT Do Path Confirmation Once
24=End of script

[FaxCaller]
1=>ACallsBWithDTMF
2=>A:@:WaitForFax
3=>A:@:WaitForVoice
4=End of script

[GotoActions__Modem]
3=0
7=0
12=0
4=0
8=0
13=0
1=0
5=0
9=0
10=0
2=0
6=0
11=0

[GotoActions__A calls B (ISDN) and confirms for Call Length]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0

[GotoActions__A calls B (MF R1.5) and confirms for Call Length]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0
15=0
16=0
17=0

[GotoActions__FaxCaller]
1=0
2=0
3=0
4=0

[GotoActions__CallReturn]
1=0

[A calls B (DTMF) and confirms once]
1=; This script makes a call from circuit A to
2=; circuit B with DTMF dialling. The two channels
3=; confirm that the call was established correctly
4=; and then go on hook.
5=;
6=; Configure the phone numbers for the circuits first,
7=; in the Configure | Phones window.
8=;
9=; You normally set the channel configuration (in
10=; the Partition and Timing window) to be OT.
11=;
12=A calls B, DTMF, confirms once
13=End of script

[A calls B (SIP) and confirms for Call Length]
1=A calls B, SIP, confirms for Call Length
2=End of script

[A calls B (VoIP) and confirms for Call Length]
1=A calls B, VoIP, confirms for Call Length
2=End of script

[GotoActions__A calls B (VoIP) and confirms for random CL]
1=0
2=0

[VoiceQuality]
1=>ACallsBWithDTMFAndConfirmsForCallLength
2=>A:@:JustHookOn
3=>B:@:WaitForBusyTone
4=End of script

[CallForwardingBusy]
7=>A:@:JustHookOn
12=>C:@:JustHookOff
30=End of script
25=>A:@:JustHookOn
8=>A:@:WaitForDialTone
13=>B:C:PathConfirmationForOnce
26=;S4:check deactivation
1=;S1: Call from B to A forward to C
9=>B:A:ACallsBWithDTMF
14=>A:@:JustHookOn
27=>A:@:WaitForDialTone
2=>A:@:WaitForDialTone
20=>A:@:JustHookOn
15=>B:@:JustHookOn
28=>B:A:ACallsBWithDTMF
3=>A:@:RegisterCFB
21=;S3: B calls A with CFB cancelled
16=>C:@:JustHookOn
29=>B:@:JustHookOn
4=>A:C:DialDTMF
22=>A:@:WaitForDialTone
17=;S2: B calls A without forwarding
5=>A:@:SendStringDTMF [#]
10=>B:@:WaitForRingBackTone
23=>A:@:CancelCFB
18=>B:A:ACallsBWithDTMFAndConfirmsOnce
6=>A:@:WaitForServiceConfirmationVoice
11=>C:@:WaitForRing
24=>A:@:WaitForCFBBusyVoice
19=>B:@:JustHookOn

[GotoActions__LargeFaxCaller]
1=0
2=0
3=0

[AFT: Call Forwarding]
1=A:@:AFT Off Hook and send VSC Activate Call Forward
2=A calls B, DTMF, confirms once
3=A:@:AFT On Hook and wait 1 sec
4=B:@:AFT On Hook and wait 1 sec
5=B:@:AFT On hook wait for incoming call
6=C:A:AFT A calls B, DTMF
7=B:@:AFT Off Hook
8=C:B:AFT Do Path Confirmation Once
9=A:@:AFT Off Hook and send VSC Deactivate Call Forward
10=End of script

[HowlerToneCheck]
3=>B:@:WaitForBusyTone
7=>ACallsBWithDTMFAndConfirmsOnce
12=>A:@:JustHookOn
4=>B:@:WaitBusyToneTimer
8=>B:@:JustHookOn
13=End of script
1=>ACallsBWithDTMFAndConfirmsOnce
5=>B:@:WaitForHowlerTone
9=>A:@:WaitForBusyTone
10=>A:@:WaitBusyToneTimer
2=>A:@:JustHookOn
6=>B:@:JustHookOn
11=>A:@:WaitForHowlerTone

[A calls B (VoIP) and confirms for random CL]
1=A calls B, VoIP, confirms for random CL
2=End of script

[AFT: Automatic Callback]
1=A calls B, DTMF, confirms once
2=C:A:AFT A calls B, DTMF
3=C:@:Wait for time in seconds [5]
4=C:@:AFT On Hook and wait 1 sec
5=C:@:AFT Off Hook and send VSC Activate Automatic Callback
6=C:@:AFT Off hook wait for stutter dial tone
7=C:@:AFT On Hook and wait 1 sec
8=A:@:AFT On Hook and wait 1 sec
9=C:@:AFT On hook wait for incoming call for timeout
10=C:@:AFT Off Hook
11=A:@:AFT On hook wait for incoming call for timeout
12=A:C:AFT Do Path Confirmation Once
13=End of script

[A calls B (DTMF) and confirms for random CL]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; Configure the phone numbers for the channels in
8=; the Configure | Phones window.
9=;
10=; You normally set the channel configuration (in
11=; the Partition and Timing window) to be OT.
12=;
13=A calls B, DTMF, confirms for random CL
14=End of script

[CallForwardingNoReply]
7=>A:@:WaitForServiceConfirmationVoice
12=>B:@:WaitForRingBackTone
31=>B:@:WaitForDialTone
26=>A:@:CancelCFNR
1=;S1: Call from B to A forward to C
9=>B:@:WaitForDialTone
14=>C:@:WaitForRing
32=>B:@:SendStringDTMF [88981393]
27=>A:@:WaitSeconds [5]
2=>A:@:WaitForDialTone
20=;S2: B calls A without forwarding
15=>C:@:JustHookOff
33=>B:@:WaitForRingBackTone
28=>A:@:WaitForServiceConfirmationVoice
3=>A:@:RegisterCFNR
21=>B:A:ACallsBWithDTMFAndConfirmsOnce
16=>B:C:PathConfirmationForOnce
34=>B:@:WaitSeconds [40]
29=>A:@:JustHookOn
4=>A:C:DialDTMF
22=>B:@:JustHookOn
17=>A:@:JustHookOn
35=>B:@:WaitForRingBackTone
5=>A:@:SendStringDTMF [#]
10=>B:@:SendStringDTMF [88981393]
23=>A:@:JustHookOn
18=>B:@:JustHookOn
36=>B:@:JustHookOn
6=>A:@:WaitSeconds [5]
11=;>B:A:DialDTMF
24=;S3: B calls A with CFNR cancelled
19=>C:@:JustHookOn
37=End of script
30=;S4: Check CFNR deactivated, if CFNR activated, ringback tone will be played only for 30 seconds
25=>A:@:WaitForDialTone
8=>A:@:JustHookOn
13=>B:@:WaitCFNRRingTimer

[GotoActions__A calls B (MF R2) and confirms for Call Length]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0
15=0
16=0
17=0

[GotoActions__CallForwardingBusy]
7=0
12=0
30=0
25=0
8=0
13=0
26=0
1=0
9=0
14=0
27=0
2=0
20=0
15=0
28=0
3=0
21=0
16=0
29=0
4=0
22=0
17=0
5=0
10=0
23=0
18=0
6=0
11=0
24=0
19=0

[GotoActions__AFT: 3-way Calling]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0

[GotoActions__SessionEndCalleeControl]
3=0
7=0
12=0
4=0
8=0
13=0
1=0
5=0
9=0
10=0
2=0
6=0
11=0

[GotoActions__AFT: Automatic Callback]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0

[GotoActions__A calls B (VoIP) and confirms for Call Length]
1=0
2=0

[GotoActions__CallPickUp]
1=0

[GotoActions__VoiceQuality]
1=0
2=0
3=0
4=0

[A calls B (no dial tone, DTMF) for Call Length]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; The channel waits for a time after going off
8=; hook instead of waiting for dial tone.
9=;
10=; Configure the phone numbers for the channels in
11=; the Configure | Phones window.
12=;
13=; You normally set the channel configuration (in
14=; the Partition and Timing window) to be OT.
15=;
16=A calls B, DTMF, no dial tone, confirm for CL
17=End of script

[GotoActions__AFT: Call Transfer]
1=0
2=0
3=0
4=0
5=0
6=0

[GotoActions__AFT: 4-way Conference]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0
15=0
16=0
17=0
18=0
19=0
20=0
21=0
22=0
23=0
24=0

[A calls B (MF R1) and confirms for Call Length]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; The number (address) is dialled using MF R1.
8=; There must be no dial tone involved in this test.
9=;
10=; Configure the phone numbers for the channels in
11=; the Configure | Phones window.
12=;
13=; You normally set the channel configuration (in
14=; the Partition and Timing window) to be OT.
15=;
16=A calls B, MF R1, confirms for Call Length
17=End of script

[GotoActions__CallForwardingUnconditional]
7=0
12=0
25=0
8=0
13=0
26=0
1=0
9=0
14=0
2=0
6=0
11=0
20=0
15=0
24=0
19=0
3=0
21=0
16=0
4=0
22=0
17=0
5=0
10=0
23=0
18=0

[GotoActions__A calls B(no dial tone, DTMF) and confirms once]
1=0
2=0

[HookOffOnContinuously]
1=End of script

[GotoActions__CallTransfer]
1=0
3=0
5=0
7=0
2=0
4=0
6=0
8=0

[A calls B (MF R2) and confirms for Call Length]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; The number (address) is dialled using MF R2.
8=; There must be no dial tone involved in this test.
9=;
10=; Configure the phone numbers for the channels in
11=; the Configure | Phones window.
12=;
13=; You normally set the channel configuration (in
14=; the Partition and Timing window) to be OT.
15=;
16=A calls B, MF R2, confirms for Call Length
17=End of script

[CallerHookOnAfterCalleeRing]
3=>A:@:JustHookOn
7=>B:@:JustHookOff
4=>ACallsBWithDTMF
8=>PathConfirmationForOnce
1=>ACallsBWithDTMF
5=>A:@:WaitForRingBackTone
9=>A:@:JustHookOn
10=>B:@:WaitForBusyTone
2=>A:@:WaitForRingBackTone
6=>B:@:WaitForRing
11=End of script

[DialWrongNumber]
3=>A:@:WaitSeconds [2]
7=>ACallsBWithDTMFAndConfirmsForCallLength
2=>A:@:DialWrongNumber
4=>A:@:WaitForCongestionTone
6=>A:@:WaitSeconds [3]
8=>A:@:JustHookOn
1=>A:@:WaitForDialTone
5=>A:@:JustHookOn
9=>B:@:WaitForBusyTone
10=End of script

[GotoActions__CallWaiting]
7=0
12=0
43=0
38=0
31=0
26=0
9=0
14=0
50=0
45=0
2=0
33=0
28=0
21=0
16=0
47=0
4=0
22=0
17=0
40=0
35=0
48=0
5=0
10=0
23=0
18=0
41=0
36=0
49=0
6=0
11=0
24=0
19=0
42=0
37=0
30=0
25=0
8=0
13=0
44=0
39=0
1=0
32=0
27=0
20=0
15=0
51=0
46=0
3=0
34=0
29=0

[LargeFaxCallee]
1=>A:@:SendLargeFax
2=End of script

[CallIdPresentation]
1=>ACallsBWithDTMFAndConfirmsForCallLength
2=>A:@:JustHookOn
3=>B:@:WaitForBusyTone
4=End of script

[GotoActions__A calls B (DTMF) and confirms once]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0

[GotoActions__AFT: Call Waiting]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0

[A calls B (no dial tone) for Call Length]
3=; is determined by the parameter you specify
7=; The channel waits for a time after going off
12=;
4=; in the Partition and Timing window, in the
8=; hook instead of waiting for dial tone.
13=A calls B, no dial tone, confirm for CL
1=; This script makes a call from circuit A
5=; column headed "CL."
9=;
10=; You normally set the channel configuration (in
14=End of script
2=; to circuit B. The length of the conversation
6=;
11=; the Partition and Timing window) to be OT.

[GotoActions__A calls B (MF R1) and confirms for Call Length]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0
15=0
16=0
17=0

[CallWaiting]
7=>ACallsBWithDTMFAndConfirmsOnce
12=>B:@:SendStringDTMF [0]
43=>A:@:JustHookOn
38=>B:C:PathConfirmationForOnce
31=;S3: B switch calls between A and C
26=>C:@:WaitSeconds [15]
9=>B:@:WaitForCallWaitingTone
14=;>C:@:WaitForCongestionTone
50=>B:@:JustHookOn
45=>C:@:JustHookOn
2=>B:@:RegisterCW
33=>C:B:ACallsBWithDTMF
28=>B:C:PathConfirmationForOnce
21=>C:B:ACallsBWithDTMF
16=>PathConfirmationForOnce
47=>B:@:CancelCW
4=>B:@:WaitForServiceConfirmationVoice
22=>B:@:WaitForCallWaitingTone
17=>A:@:JustHookOn
40=>B:@:WaitSeconds [2]
35=>B:@:JustHookFlash
48=>B:@:WaitSeconds [5]
5=>B:@:JustHookOn
10=>B:@:JustHookFlash
23=>B:@:JustHookOn
18=>B:@:JustHookOn
41=>B:@:SendStringDTMF [1]
36=>B:@:WaitSeconds [2]
49=>B:@:WaitForServiceConfirmationVoice
6=;S1: B reject incoming call from C by dial 0
11=>B:@:WaitSeconds [3]
24=>A:@:WaitForBusyTone
19=;S2: B accept call from C by onhook, A released
42=>B:A:PathConfirmationForOnce
37=>B:@:SendStringDTMF [2]
30=>C:@:JustHookOn
25=>A:@:JustHookOn
8=>C:B:ACallsBWithDTMF
13=>C:@:WaitSeconds [10]
44=>B:@:JustHookOn
39=>B:@:JustHookFlash
1=>B:@:WaitForDialTone
32=>ACallsBWithDTMFAndConfirmsOnce
27=>B:@:WaitForRing
20=>ACallsBWithDTMFAndConfirmsOnce
15=>C:@:JustHookOn
51=End of script
46=>B:@:WaitForDialTone
3=>B:@:WaitSeconds [5]
34=>B:@:WaitForCallWaitingTone
29=>B:@:JustHookOn

[SessionEndCalleeControl]
3=>A:@:WaitSeconds [5]
7=>B:@:WaitForBusyTone
12=>A:@:JustHookOn
4=>A:@:JustHookOff
8=>B:@:JustHookOn
13=End of script
1=>ACallsBWithDTMFAndConfirmsOnce
5=>PathConfirmationForOnce
9=>ACallsBWithDTMFAndConfirmsOnce
10=>B:@:JustHookOn
2=>A:@:JustHookOn
6=>A:@:JustHookOn
11=>A:@:WaitForBusyTone

[GotoActions__HowlerToneCheck]
3=0
7=0
12=0
4=0
8=0
13=0
1=0
5=0
9=0
10=0
2=0
6=0
11=0

[NoDialWaitForHowlerTone]
3=>A:@:WaitForCongestionTone
7=>ACallsBWithDTMFAndConfirmsOnce
2=>A:@:WaitStartTimer
4=>A:@:WaitCongestionToneTimer
6=>A:@:JustHookOn
8=>A:@:JustHookOn
1=>A:@:WaitForDialTone
5=>A:@:WaitForHowlerTone
9=>B:@:WaitForBusyTone
10=End of script

[A calls B (MF R1.5) and confirms for Call Length]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; The number (address) is dialled using MF R1.5.
8=; There must be no dial tone involved in this test.
9=;
10=; Configure the phone numbers for the channels in
11=; the Configure | Phones window.
12=;
13=; You normally set the channel configuration (in
14=; the Partition and Timing window) to be OT.
15=;
16=A calls B, MF R1.5, confirms for Call Length
17=End of script

[A calls B(Pulse) and confirms for Call Length]
1=A calls B, Pulse, confirms for Call Length
2=End of script

[GotoActions__DialVacantNumber]
3=0
7=0
2=0
4=0
6=0
8=0
1=0
5=0
9=0

[GotoActions__A calls B(Pulse) and confirms for Call Length]
1=0
2=0

[ThreePartyService]
7=>A:@:SendStringDTMF [3]
12=>B:C:PathConfirmationForOnce
30=>A:@:JustHookOn
25=>A:@:WaitSeconds [2]
8=>PathConfirmationForOnce
13=>A:@:JustHookOn
31=>C:@:JustHookOn
26=>A:@:SendStringDTMF [1]
1=>ACallsBWithDTMFAndConfirmsOnce
9=>A:@:WaitSeconds [2]
14=>B:@:JustHookOn
32=End of script
27=>A:C:PathConfirmationForOnce
2=>A:@:JustHookFlash
20=>A:@:JustHookFlash
15=>C:@:JustHookOn
28=>B:@:WaitForBusyTone
3=>A:@:WaitForStutterDialTone
21=>A:@:WaitSeconds [2]
16=>ACallsBWithDTMFAndConfirmsOnce
29=>B:@:JustHookOn
4=>A:C:ACallsBWithDTMFAndConfirmsOnce
22=>A:@:SendStringDTMF [2]
17=>A:@:JustHookFlash
5=>A:@:JustHookFlash
10=>A:C:PathConfirmationForOnce
23=>PathConfirmationForOnce
18=>A:@:WaitForStutterDialTone
6=>A:@:WaitSeconds [2]
11=>B:@:WaitSeconds [2]
24=>A:@:JustHookFlash
19=>A:C:ACallsBWithDTMFAndConfirmsOnce

[GotoActions__LongTimeCall]
1=0

[GotoActions__CalleeNoResponse]
3=0
7=0
12=0
2=0
4=0
6=0
8=0
11=0
1=0
5=0
9=0
10=0

[GotoActions__A calls B (SIP) and confirms for Call Length]
1=0
2=0

[SecondaryDial]
3=>A:@:JustHookFlash
7=>CheckRingBack
12=>WaitForSeconds [3]
4=>A:@:WaitForSecondDialTone
8=>WaitForSeconds [3]
13=>B:@:WaitForBusyTone
1=>A:@:WaitForDialTone
5=>DialDTMF
9=>B:@:JustHookOff
10=>PathConfirmationForCallLength
14=>B:@:JustHookOn
2=;>DialZero
6=>B:@:WaitForRing
11=>A:@:JustHookOn
15=End of script

[AFT: Call Transfer]
1=A calls B, DTMF, confirms once
2=B:@:AFT A does hookflash and waits for Stutter dial tone
3=B:C:A calls B, DTMF, confirms once
4=B:@:AFT On Hook and wait 1 sec
5=A:C:AFT Do Path Confirmation Once
6=End of script

[CallerHookOnBeforeCalleeRing]
1=>ACallsBWithDTMF
3=>ACallsBWithDTMFAndConfirmsOnce
5=>B:@:WaitForBusyTone
2=>A:@:JustHookOn
4=>A:@:JustHookOn
6=End of script

[GotoActions__CallerHookOnBeforeCalleeRing]
1=0
3=0
5=0
2=0
4=0
6=0

[A calls B(no dial tone, DTMF) and confirms once]
1=A calls B, DTMF, no dial tone, confirms once
2=End of script

[LargeFaxCaller]
1=>ACallsBWithDTMF
2=>WaitForLargeFax
3=End of script

[GotoActions__SessionEndCallerControl]
3=0
7=0
12=0
4=0
8=0
13=0
1=0
5=0
9=0
10=0
2=0
6=0
11=0

[LongTimeCall]
1=End of script

[A calls B (ISDN) and confirms for random CL]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; Configure the phone numbers for the channels in
8=; the Configure | Phones window.
9=;
10=; You normally set the channel configuration (in
11=; the Partition and Timing window) to be OT.
12=;
13=A calls B, ISDN, confirms for random CL
14=End of script

[A calls B (DTMF) and confirms for Call Length]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; Configure the phone numbers for the channels in
8=; the Configure | Phones window.
9=;
10=; You normally set the channel configuration (in
11=; the Partition and Timing window) to be OT.
12=;
13=A calls B, DTMF, confirms for Call Length
14=End of script

[GotoActions__CallIdPresentation]
1=0
2=0
3=0
4=0

[DialVacantNumber]
3=>A:@:WaitForVacantNumberVoice
7=>A:@:JustHookOn
2=>A:@:DialVacantNumber
4=>A:@:JustHookOn
6=>ACallsBWithDTMFAndConfirmsForCallLength
8=>B:@:WaitForBusyTone
1=>A:@:WaitForDialTone
5=>A:@:WaitSeconds [3]
9=End of script

[GotoActions__AFT: Call Forwarding]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0

[GotoActions__CalleeBusy]
3=0
7=0
2=0
4=0
6=0
8=0
1=0
5=0
9=0

[A calls B (ISDN) and confirms for Call Length]
1=; This script makes a call from circuit A
2=; to circuit B. The length of the conversation
3=; is determined by the parameter you specify
4=; in the Partition and Timing window, in the
5=; column headed "CL."
6=;
7=; Configure the phone numbers for the channels in
8=; the Configure | Phones window.
9=;
10=; You normally set the channel configuration (in
11=; the Partition and Timing window) to be OT.
12=;
13=A calls B, ISDN, confirms for Call Length
14=End of script

[AFT: Caller ID Blocking]
1=A:@:AFT Off Hook and send VSC Caller ID Blocking
2=AFT A calls B, no dial tone, DTMF, confirms once
3=A:@:AFT On Hook and wait 1 sec
4=B:@:AFT On Hook and wait 1 sec
5=A calls B, DTMF, confirms once
6=End of script

[NormalBasicCall]
1=>ACallsBWithDTMFAndConfirmsForCallLength
2=>A:@:JustHookOn
3=>B:@:WaitForBusyTone
4=End of script

[GotoActions__AbbreviatedAddress]
7=0
12=0
4=0
8=0
13=0
17=0
1=0
5=0
9=0
10=0
14=0
18=0
2=0
6=0
11=0
15=0
19=0
3=0
16=0

[GotoActions__A calls B (no dial tone, DTMF) for Call Length]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0
15=0
16=0
17=0

[CallReturn]
1=End of script

[GotoActions__DialIncompletedNumber]
3=0
7=0
2=0
4=0
6=0
8=0
1=0
5=0
9=0
10=0

[GotoActions__A calls B (DTMF) and confirms for random CL]
1=0
2=0
3=0
4=0
5=0
6=0
7=0
8=0
9=0
10=0
11=0
12=0
13=0
14=0

[GotoActions__HookOffNoDial]
1=0
3=0
5=0
2=0
4=0
6=0

[DialIncompletedNumber]
3=>A:@:WaitInterDigitTimer
7=>ACallsBWithDTMFAndConfirmsForCallLength
2=>A:@:DialIncompletedNumber
4=>A:@:WaitForCongestionTone
6=>A:@:WaitSeconds [3]
8=>A:@:JustHookOn
1=>A:@:WaitForDialTone
5=>A:@:JustHookOn
9=>B:@:WaitForBusyTone
10=End of script

[SessionEndCallerControl]
3=>B:@:WaitSeconds [5]
7=>A:@:WaitForBusyTone
12=>B:@:JustHookOn
4=>B:@:JustHookOff
8=>A:@:JustHookOn
13=End of script
1=>ACallsBWithDTMFAndConfirmsOnce
5=>PathConfirmationForOnce
9=>ACallsBWithDTMFAndConfirmsOnce
10=>A:@:JustHookOn
2=>B:@:JustHookOn
6=>B:@:JustHookOn
11=>B:@:WaitForBusyTone

[GotoActions__CallerHookOnAfterCalleeRing]
3=0
7=0
4=0
8=0
1=0
5=0
9=0
10=0
2=0
6=0
11=0

[GotoActions__A calls B (ISUP) and confirms for Call Length]
1=0
2=0

[Modem]
3=>B:@:WaitForRing
7=>WaitForSeconds [3]
12=>B:@:JustHookOn
4=>CheckRingBack
8=>PathConfirmationForCallLength
13=End of script
1=>A:@:WaitForDialTone
5=>WaitForSeconds [3]
9=>A:@:JustHookOn
10=>WaitForSeconds [3]
2=>DialDTMF
6=>B:@:JustHookOff
11=>B:@:WaitForBusyTone

[GotoActions__A calls B (VoIP) and confirms once]
1=0
2=0

[GotoActions__AFT: Caller ID Blocking]
1=0
2=0
3=0
4=0
5=0
6=0
[CallForwardingUnconditional]
7=>A:@:WaitForServiceConfirmationVoice
12=>C:@:JustHookOff
25=>A:@:JustHookOn
8=>A:@:JustHookOn
13=>B:C:PathConfirmationForOnce
26=End of script
1=;S1: Call from B to A forward to C
9=>B:A:ACallsBWithDTMF
14=>B:@:JustHookOn
2=>A:@:WaitForDialTone
6=>A:@:WaitSeconds [5]
11=>C:@:WaitForRing
20=>A:@:WaitForServiceConfirmationVoice
15=>C:@:WaitForBusyTone
24=>A:@:WaitForBusyTone
19=>A:@:WaitSeconds [5]
3=>A:@:RegisterCFU
21=>A:@:JustHookOn
16=>C:@:JustHookOn
4=>A:C:DialDTMF
22=>B:A:ACallsBWithDTMFAndConfirmsOnce
17=>A:@:WaitForDialTone
5=>A:@:SendStringDTMF [#]
10=>B:@:WaitForRingBackTone
23=>B:@:JustHookOn
18=>A:@:CancelCFU

[CallPickUp]
1=End of script

[GotoActions__SecondaryDial]
3=0
7=0
12=0
4=0
8=0
13=0
1=0
5=0
9=0
10=0
14=0
2=0
6=0
11=0
15=0

